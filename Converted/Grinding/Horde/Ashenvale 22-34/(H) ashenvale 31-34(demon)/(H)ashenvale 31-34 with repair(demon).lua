---Generated by lokiagent's json converter---
Player = GetPlayer()
UseDBToRepair(true)
SetQuestRepairAt(30)
UseDBToSell(false)
SetQuestSellAt(2)


Food = {
    {level = 1, name = "Tough Hunk of Bread"},
    {level = 5, name = "Freshly Baked Bread"},
    {level = 15, name = "Moist Cornbread"},
    {level = 25, name = "Mulgore Spice Bread"},
    {level = 35, name = "Soft Banana Bread"},
    {level = 45, name = "Homemade Cherry Pie"}
}
Drink = {
    {level = 1, name = "Refreshing Spring Water"},
    {level = 5, name = "Ice Cold Milk"},
    {level = 15, name = "Melon Juice"},
    {level = 25, name = "Sweet Nectar"},
    {level = 35, name = "Moonberry Juice"},
    {level = 45, name = "Morning Glory Dew"}
}
Vendors = {
    -- Stranglethorn Vale (1434)
    {name = "Uthok", ID = 1149, friendlyAlliance = false, friendlyHorde = true, location = 1434},
    {name = "Nixxrax Fillamug", ID = 2832, friendlyAlliance = true, friendlyHorde = true, location = 1434},
    -- Ashenvale (1440)
    {name = "Maliynn", ID = 3961, friendlyAlliance = true, friendlyHorde = false, location = 1440},
    {name = "Innkeeper Sikewa", ID = 12196, friendlyAlliance = false, friendlyHorde = true, location = 1440},
    -- The Hinterlands (1425)
    {name = "Innkeeper Adegwa", ID = 8118, friendlyAlliance = false, friendlyHorde = true, location = 1425},
    -- Azshara (1447)
    {name = "Kurll", ID = 3621, friendlyAlliance = true, friendlyHorde = false, location = 1447},
    -- Feralas (1444)
    {name = "Mardrack Greenwell", ID = 7941, friendlyAlliance = false, friendlyHorde = true, location = 1444},
    {name = "Loorana", ID = 8143, friendlyAlliance = true, friendlyHorde = false, location = 1444},
    -- Desolace (1443)
    {name = "Janet Hommers", ID = 8150, friendlyAlliance = true, friendlyHorde = true, location = 1443},
    -- The Barrens (1413)
    {name = "Innkeeper Boorand Plainswind", ID = 3934, friendlyAlliance = false, friendlyHorde = true, location = 1413},
    -- Hillsbrad Foothills (1424)
    {name = "Innkeeper Shay", ID = 2388, friendlyAlliance = false, friendlyHorde = true, location = 1424},
    -- Silithus (1451)
    {name = "Calandrath", ID = 15174, friendlyAlliance = true, friendlyHorde = true, location = 1451},
    -- Badlands (1418)
    {name = "Innkeeper Shul'kar", ID = 9356, friendlyAlliance = false, friendlyHorde = true, location = 1418},
    -- Dustwallow Marsh (1445)
    {name = "Innkeeper Janene", ID = 6272, friendlyAlliance = true, friendlyHorde = false, location = 1445},
    {name = "Innkeeper Shay", ID = 2388, friendlyAlliance = false, friendlyHorde = true, location = 1445},
    -- Swamp of Sorrows (1435)
    {name = "Thultash", ID = 982, friendlyAlliance = true, friendlyHorde = false, location = 1435},
    -- Felwood (1448)
    {name = "Innkeeper Shyria", ID = 11116, friendlyAlliance = true, friendlyHorde = false, location = 1448},
    -- Winterspring (1452)
    {name = "Himmik", ID = 11187, friendlyAlliance = true, friendlyHorde = true, location = 1452},
    -- Duskwood (1431)
    {name = "Innkeeper Trelayne", ID = 6791, friendlyAlliance = true, friendlyHorde = false, location = 1431},
    -- Thousand Needles (1441)
    {name = "Laer Stepperunner", ID = 3689, friendlyAlliance = false, friendlyHorde = true, location = 1441},
    -- Eastern Plaguelands (1423)
    {name = "Innkeeper Bates", ID = 16256, friendlyAlliance = true, friendlyHorde = false, location = 1423},
    -- Arathi Highlands (1417)
    {name = "Innkeeper Kimlya", ID = 9501, friendlyAlliance = true, friendlyHorde = false, location = 1417},
    -- Wetlands (1437)
    {name = "Innkeeper Helbrek", ID = 14624, friendlyAlliance = true, friendlyHorde = false, location = 1437},
    -- Western Plaguelands (1422)
    {name = "Innkeeper Lyshaerya", ID = 12959, friendlyAlliance = true, friendlyHorde = false, location = 1422},
    -- Un'Goro Crater (1449)
    {name = "Innkeeper Karakul", ID = 11118, friendlyAlliance = true, friendlyHorde = true, location = 1449},
    -- Stonetalon Mountains (1442)
    {name = "Innkeeper Jayka", ID = 7731, friendlyAlliance = false, friendlyHorde = true, location = 1442},
    -- Searing Gorge (1427)
    {name = "Innkeeper Grilka", ID = 12944, friendlyAlliance = false, friendlyHorde = true, location = 1427},
    -- Tanaris (1446)
    {name = "Innkeeper Fizzgrimble", ID = 7733, friendlyAlliance = true, friendlyHorde = false, location = 1446},
    {name = "Innkeeper Shul'kar", ID = 9356, friendlyAlliance = false, friendlyHorde = true, location = 1446},
    -- Blasted Lands (1419)
    {name = "Bernie Heisten", ID = 3546, friendlyAlliance = true, friendlyHorde = true, location = 1419},
    -- Burning Steppes (1428)
    {name = "Gabrielle Chase", ID = 3298, friendlyAlliance = true, friendlyHorde = false, location = 1428},
    -- Silverpine Forest (1421)
    {name = "Innkeeper Bates", ID = 16256, friendlyAlliance = false, friendlyHorde = true, location = 1421},
    -- Westfall (1436)
    {name = "Innkeeper Heather", ID = 8931, friendlyAlliance = true, friendlyHorde = false, location = 1436},
    -- Moonglade (1450)
    {name = "Dargon", ID = 12019, friendlyAlliance = true, friendlyHorde = true, location = 1450},
    {name = "My'lanna", ID = 12026, friendlyAlliance = true, friendlyHorde = true, location = 1450},
    -- Redridge Mountains (1433)
    {name = "Bartender Wental", ID = 5620, friendlyAlliance = false, friendlyHorde = true, location = 1433},
    -- Darkshore (1439)
    {name = "Tiyani", ID = 4195, friendlyAlliance = true, friendlyHorde = false, location = 1439},
    -- Loch Modan (1432)
    {name = "Innkeeper Hearthstove", ID = 6734, friendlyAlliance = true, friendlyHorde = false, location = 1432},
    -- Elwynn Forest (1429)
    {name = "Innkeeper Farley", ID = 295, friendlyAlliance = true, friendlyHorde = false, location = 1429},
    -- Tirisfal Glades (1420)
    {name = "Innkeeper Renee", ID = 5688, friendlyAlliance = false, friendlyHorde = true, location = 1420},
    -- Dun Morogh (1426)
    {name = "Kazan Mogosh", ID = 1237, friendlyAlliance = true, friendlyHorde = false, location = 1426},
    -- Mulgore (1412)
    {name = "Innkeeper Kauth", ID = 6746, friendlyAlliance = false, friendlyHorde = true, location = 1412},
    -- Teldrassil (1438)
    {name = "Dellylah", ID = 6091, friendlyAlliance = true, friendlyHorde = false, location = 1438},
    -- Durotar (1411)
    {name = "Innkeeper Grosk", ID = 6928, friendlyAlliance = false, friendlyHorde = true, location = 1411},
}
function SetVendor()
    local zone = GetZoneID()
    Log(zone)
    Log(Player:IsAlliance())
    local faction -- Declare once here
    if Player:IsAlliance() == true then
        faction = "Alliance"
        Log("For the Alliance!")
    else
        faction = "Horde"
        Log("For the Horde!")
    end
    Log("Faction:" .. faction)
    local playerPos = UnitPosToFloatArray(GetPlayer())
    local bestVendor = nil

    -- Try to find a vendor in the same zone and for the player's faction
    for _, vendor in ipairs(Vendors) do
        if vendor.location == zone then
            if (faction == "Alliance" and vendor.friendlyAlliance) or (faction == "Horde" and vendor.friendlyHorde) then
                Vendor = vendor
                print("Selected Vendor: " .. Vendor.name)
                return
            end
        end
    end

    -- If not found, find the closest vendor for the player's faction
    local minDist = math.huge
    for _, vendor in ipairs(Vendors) do
        if (faction == "Alliance" and vendor.friendlyAlliance) or (faction == "Horde" and vendor.friendlyHorde) then
            local vendorPos = GetNPCPostionFromDB(vendor.ID)
            if vendorPos and playerPos then
                local dist = DistanceBetweenPoints(playerPos, vendorPos)
                if dist < minDist then
                    minDist = dist
                    bestVendor = vendor
                end
            end
        end
    end

    if bestVendor then
        Vendor = bestVendor
        print("Selected closest Vendor: " .. Vendor.name)
    else
        print("No suitable vendor found for your faction.")
        Vendor = nil
    end
    Log("This isn't working!")
end
function SetFoodAndDrink()
    if Player.Class == "Warrior" or Player.Class == "Rogue" then
        Drink = nil
    else
        local bestDrink = Drink[1]
        for i = 1, #Drink do
            if Drink[i].level <= Player.Level and Drink[i].level > bestDrink.level then
                bestDrink = Drink[i]
            end
        end
        SelectedDrink = bestDrink
    end
    for i = 1, #Food do
        if Food[i].level <= Player.Level then
            SelectedFood = Food[i]
        end
    end
    if Drink == nil then
        print("No suitable drink found for your class.")
    else
        print("Selected Drink: " .. SelectedDrink.name)
        SetDrink(SelectedDrink.name, 40)
    end
    if SelectedFood then
        print("Selected Food: " .. SelectedFood.name)
        SetFood(SelectedFood.name, 40)
    else
        print("No suitable food found for your level.")
    end
end
function Override()
    if Drink ~= nil and SelectedDrink ~= nil then
        if ItemCount(SelectedDrink.name) < 5 then
            return false
        end
    end
    if SelectedFood ~= nil then
        if ItemCount(SelectedFood.name) < 5 then
            return false
        end
    end
    return true
end
function SellAtVendor()
    if not Vendor then
        print("Error: No vendor selected.")
        return
    end
    local pos = GetNPCPostionFromDB(Vendor.ID)
    if pos then
        QuestGoToPoint(pos[0], pos[1], pos[2], false, true)
        local unit = FindUnitByName(Vendor.name)
        if unit then
            FindMeshPathToUnit(unit)
            InteractWithUnit(unit)
            SleepPlugin(3000)
        else
            print("Error: Vendor " .. Vendor.name .. " not found.")
        end
    else
        print("Error: Could not get position for vendor " .. Vendor.name)
    end
end

SetFoodAndDrink()
--Grind and Gather goes here--
SetVendor()
SellAtVendor()

local Waypoints = {
    {2016.08862,-2977.111,109.13623},
    {2010.37561,-2971.543,109.408546},
    {2007.45886,-2968.68115,109.202446},
    {2004.75452,-2966.02759,108.966843},
    {2001.63171,-2962.96362,108.516434},
    {1998.715,-2960.10181,107.961815},
    {1995.59216,-2957.0376,107.529366},
    {1989.1759,-2951.013,106.769928},
    {1986.3783,-2948.445,106.375465},
    {1979.26782,-2950.98462,105.356293},
    {1976.59521,-2954.4375,105.041382},
    {1973.20483,-2958.81738,104.641281},
    {1969.99133,-2962.969,104.247841},
    {1966.5957,-2967.35571,103.808968},
    {1962.49316,-2972.656,103.279243},
    {1959.09741,-2977.043,102.827782},
    {1963.00623,-2983.18335,103.525772},
    {1965.99133,-2987.84888,103.993591},
    {1969.29236,-2993.008,104.465088},
    {1972.59338,-2998.16748,104.869743},
    {1975.89453,-3003.327,105.235451},
    {1979.983,-3009.717,107.354874},
    {1976.757,-3018.39185,105.660789},
    {1973.97766,-3023.17261,105.535675},
    {1970.89929,-3028.46777,105.276978},
    {1967.82092,-3033.763,104.977821},
    {1964.59753,-3039.30786,104.679344},
    {1961.374,-3044.85278,104.968872},
    {1957.856,-3050.90454,104.773582},
    {1954.48291,-3056.70654,104.733574},
    {1950.96484,-3062.758,104.477432},
    {1943.41614,-3066.29,103.518852},
    {1937.027,-3069.15015,103.511818},
    {1931.71375,-3071.52856,104.505882},
    {1925.58826,-3074.27051,107.782906},
    {1929.42932,-3079.59839,105.918137},
    {1932.85828,-3084.3103,104.920647},
    {1936.8009,-3089.728,105.038651},
    {1940.57483,-3094.91382,103.933167},
    {1944.52393,-3100.34033,104.45623},
    {1943.37329,-3109.8418,103.602028},
    {1941.52112,-3114.75439,102.88755},
    {1939.36035,-3120.4856,102.038544},
    {1937.19958,-3126.2168,102.009483},
    {1936.31372,-3134.12427,101.286621},
    {1935.88147,-3139.05786,100.308289},
    {1935.42322,-3144.28784,99.68616},
    {1934.965,-3149.51782,99.0022},
    {1934.50671,-3154.7478,98.81321},
    {1934.04846,-3159.97778,99.84511},
    {1944.93555,-3160.68872,100.859772},
    {1949.89282,-3160.88721,101.496819},
    {1955.72449,-3161.12036,102.116257},
    {1967.52161,-3156.62817,102.162987},
    {1971.97461,-3153.84741,102.135063},
    {1977.1698,-3150.603,101.761887},
    {1981.6228,-3147.822,101.655731},
    {1985.83081,-3145.194,101.590538},
    {1993.52563,-3144.7605,101.776665},
    {1999.0625,-3144.525,101.971169},
    {2004.88477,-3144.277,102.286552},
    {2010.13,-3144.05371,102.805542},
    {2015.96094,-3143.80566,103.23291},
    {2023.24268,-3147.99023,101.970253},
    {2027.16748,-3151.89844,101.28038},
    {2030.47217,-3155.18921,101.106628},
    {2034.19226,-3158.8938,101.233871},
    {2036.877,-3161.56714,101.459053},
    {2044.72607,-3161.71631,101.464119},
    {2049.687,-3161.675,101.41584},
    {2055.22559,-3161.62915,100.857109},
    {2060.47559,-3161.58545,100.674263},
    {2066.89771,-3161.532,100.901955},
    {2071.84277,-3161.491,101.145248},
    {2078.39722,-3159.091,101.469025},
    {2083.02954,-3157.33936,101.471321},
    {2088.21851,-3155.3772,101.471321},
    {2093.94751,-3153.211,101.616158},
    {2096.943,-3152.07813,101.8748},
    {2103.91431,-3149.98779,102.364006},
    {2108.66772,-3148.567,102.56601},
    {2113.13623,-3147.2312,102.600952},
    {2117.60474,-3145.89575,102.942276},
    {2122.08154,-3144.55762,103.541504},
    {2126.82642,-3143.13916,104.469994},
    {2131.02124,-3136.399,104.87233},
    {2133.54688,-3131.80615,105.26017},
    {2135.79419,-3127.71948,105.880043},
    {2138.04126,-3123.633,106.945351},
    {2140.432,-3119.28564,107.836586},
    {2140.85352,-3118.519,107.915733},
    {2133.55933,-3118.32983,107.637131},
    {2128.90576,-3118.21948,106.790985},
    {2123.36841,-3118.088,106.279991},
    {2118.40869,-3117.97021,105.996925},
    {2113.16016,-3117.8457,105.699982},
    {2107.33423,-3117.70728,105.439468},
    {2102.95166,-3117.60327,105.302155},
    {2106.60132,-3111.64819,106.242027},
    {2109.82715,-3106.795,107.326935},
    {2112.89819,-3102.175,107.850822},
    {2115.964,-3097.56226,108.166321},
    {2118.71045,-3093.43042,108.615318},
    {2122.101,-3088.32959,109.225273},
    {2125.327,-3083.47632,109.753647},
    {2127.58887,-3080.07324,110.1051},
    {2119.234,-3077.04785,110.096985},
    {2114.5625,-3075.377,110.222908},
    {2109.89087,-3073.706,109.84127},
    {2105.22778,-3072.038,109.550484},
    {2100.28467,-3070.26978,109.437561},
    {2095.06934,-3068.40454,109.282288},
    {2089.846,-3066.53613,109.32235},
    {2083.52686,-3064.27563,108.812393},
    {2080.2395,-3063.09985,108.56089},
    {2087.784,-3057.85742,109.068146},
    {2091.61768,-3055.20166,109.281189},
    {2096.17065,-3052.04761,109.651779},
    {2100.731,-3048.88867,110.18856},
    {2105.04663,-3045.89917,110.55246},
    {2110.319,-3042.247,110.42466},
    {2114.39722,-3039.42188,110.343048},
    {2118.95044,-3036.268,110.280418},
    {2123.266,-3033.27856,110.560394},
    {2127.819,-3030.12451,111.30896},
    {2132.37939,-3026.96558,112.478973},
    {2136.9292,-3023.814,113.615959},
    {2141.72681,-3020.49048,114.322273},
    {2145.56055,-3017.835,114.984573},
    {2146.881,-3011.274,115.622},
    {2148.01514,-3006.16577,116.032333},
    {2149.15259,-3001.04053,116.082825},
    {2150.35474,-2995.625,115.920372},
    {2151.55371,-2990.22437,115.885246},
    {2153.008,-2983.67261,116.466995},
    {2153.6394,-2980.82813,116.784096},
    {2147.06445,-2982.07349,115.820648},
    {2141.917,-2983.10645,115.025818},
    {2136.478,-2984.19775,114.923927},
    {2130.4812,-2985.401,113.882965},
    {2125.042,-2986.49243,112.862038},
    {2119.61157,-2987.582,112.212738},
    {2114.74731,-2988.558,111.73101},
    {2106.65063,-2983.304,111.409981},
    {2102.46216,-2980.153,111.1843},
    {2097.79834,-2976.64453,111.8581},
    {2093.83374,-2973.66187,112.589455},
    {2089.177,-2970.15869,111.970711},
    {2084.04468,-2966.29761,111.58522},
    {2079.3877,-2962.79419,111.706291},
    {2074.25537,-2958.933,112.162308},
    {2072.39551,-2957.534,112.373962},
    {2065.99536,-2959.524,112.534981},
    {2061.26465,-2960.9895,112.159256},
    {2055.414,-2962.80225,109.233231},
    {2049.56348,-2964.615,107.007584},
    {2043.98865,-2966.34229,106.46376},
    {2038.41382,-2968.06934,106.209145},
    {2032.56323,-2969.882,105.939163},
    {2026.43677,-2971.78027,107.160751},
    {2019.47461,-2973.9375,108.936409},
    {2013.54468,-2971.70483,109.552467}
}

local TargetNames = {
    
}

SetFoodAndDrink()
GrindAndGatherPath(TableToStringList(TargetNames), TableToVecList(Waypoints), 40, false, "Override")
SetVendor()
SellAtVendor()
