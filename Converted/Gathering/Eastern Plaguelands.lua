---Generated by lokiagent's json converter---
Player = GetPlayer()
UseDBToRepair(false)
SetQuestRepairAt(30)
UseDBToSell(false)
SetQuestSellAt(2)


Food = {
    {level = 1, name = "Tough Hunk of Bread"},
    {level = 5, name = "Freshly Baked Bread"},
    {level = 15, name = "Moist Cornbread"},
    {level = 25, name = "Mulgore Spice Bread"},
    {level = 35, name = "Soft Banana Bread"},
    {level = 45, name = "Homemade Cherry Pie"}
}
Drink = {
    {level = 1, name = "Refreshing Spring Water"},
    {level = 5, name = "Ice Cold Milk"},
    {level = 15, name = "Melon Juice"},
    {level = 25, name = "Sweet Nectar"},
    {level = 35, name = "Moonberry Juice"},
    {level = 45, name = "Morning Glory Dew"}
}
Vendors = {
    -- Stranglethorn Vale (1434)
    {name = "Uthok", ID = 1149, friendlyAlliance = false, friendlyHorde = true, location = 1434},
    {name = "Nixxrax Fillamug", ID = 2832, friendlyAlliance = true, friendlyHorde = true, location = 1434},
    -- Ashenvale (1440)
    {name = "Maliynn", ID = 3961, friendlyAlliance = true, friendlyHorde = false, location = 1440},
    {name = "Innkeeper Sikewa", ID = 12196, friendlyAlliance = false, friendlyHorde = true, location = 1440},
    -- The Hinterlands (1425)
    {name = "Innkeeper Adegwa", ID = 8118, friendlyAlliance = false, friendlyHorde = true, location = 1425},
    -- Azshara (1447)
    {name = "Kurll", ID = 3621, friendlyAlliance = true, friendlyHorde = false, location = 1447},
    -- Feralas (1444)
    {name = "Mardrack Greenwell", ID = 7941, friendlyAlliance = false, friendlyHorde = true, location = 1444},
    {name = "Loorana", ID = 8143, friendlyAlliance = true, friendlyHorde = false, location = 1444},
    -- Desolace (1443)
    {name = "Janet Hommers", ID = 8150, friendlyAlliance = true, friendlyHorde = true, location = 1443},
    -- The Barrens (1413)
    {name = "Innkeeper Boorand Plainswind", ID = 3934, friendlyAlliance = false, friendlyHorde = true, location = 1413},
    -- Hillsbrad Foothills (1424)
    {name = "Innkeeper Shay", ID = 2388, friendlyAlliance = false, friendlyHorde = true, location = 1424},
    -- Silithus (1451)
    {name = "Calandrath", ID = 15174, friendlyAlliance = true, friendlyHorde = true, location = 1451},
    -- Badlands (1418)
    {name = "Innkeeper Shul'kar", ID = 9356, friendlyAlliance = false, friendlyHorde = true, location = 1418},
    -- Dustwallow Marsh (1445)
    {name = "Innkeeper Janene", ID = 6272, friendlyAlliance = true, friendlyHorde = false, location = 1445},
    {name = "Innkeeper Shay", ID = 2388, friendlyAlliance = false, friendlyHorde = true, location = 1445},
    -- Swamp of Sorrows (1435)
    {name = "Thultash", ID = 982, friendlyAlliance = true, friendlyHorde = false, location = 1435},
    -- Felwood (1448)
    {name = "Innkeeper Shyria", ID = 11116, friendlyAlliance = true, friendlyHorde = false, location = 1448},
    -- Winterspring (1452)
    {name = "Himmik", ID = 11187, friendlyAlliance = true, friendlyHorde = true, location = 1452},
    -- Duskwood (1431)
    {name = "Innkeeper Trelayne", ID = 6791, friendlyAlliance = true, friendlyHorde = false, location = 1431},
    -- Thousand Needles (1441)
    {name = "Laer Stepperunner", ID = 3689, friendlyAlliance = false, friendlyHorde = true, location = 1441},
    -- Eastern Plaguelands (1423)
    {name = "Innkeeper Bates", ID = 16256, friendlyAlliance = true, friendlyHorde = false, location = 1423},
    -- Arathi Highlands (1417)
    {name = "Innkeeper Kimlya", ID = 9501, friendlyAlliance = true, friendlyHorde = false, location = 1417},
    -- Wetlands (1437)
    {name = "Innkeeper Helbrek", ID = 14624, friendlyAlliance = true, friendlyHorde = false, location = 1437},
    -- Western Plaguelands (1422)
    {name = "Innkeeper Lyshaerya", ID = 12959, friendlyAlliance = true, friendlyHorde = false, location = 1422},
    -- Un'Goro Crater (1449)
    {name = "Innkeeper Karakul", ID = 11118, friendlyAlliance = true, friendlyHorde = true, location = 1449},
    -- Stonetalon Mountains (1442)
    {name = "Innkeeper Jayka", ID = 7731, friendlyAlliance = false, friendlyHorde = true, location = 1442},
    -- Searing Gorge (1427)
    {name = "Innkeeper Grilka", ID = 12944, friendlyAlliance = false, friendlyHorde = true, location = 1427},
    -- Tanaris (1446)
    {name = "Innkeeper Fizzgrimble", ID = 7733, friendlyAlliance = true, friendlyHorde = false, location = 1446},
    {name = "Innkeeper Shul'kar", ID = 9356, friendlyAlliance = false, friendlyHorde = true, location = 1446},
    -- Blasted Lands (1419)
    {name = "Bernie Heisten", ID = 3546, friendlyAlliance = true, friendlyHorde = true, location = 1419},
    -- Burning Steppes (1428)
    {name = "Gabrielle Chase", ID = 3298, friendlyAlliance = true, friendlyHorde = false, location = 1428},
    -- Silverpine Forest (1421)
    {name = "Innkeeper Bates", ID = 16256, friendlyAlliance = false, friendlyHorde = true, location = 1421},
    -- Westfall (1436)
    {name = "Innkeeper Heather", ID = 8931, friendlyAlliance = true, friendlyHorde = false, location = 1436},
    -- Moonglade (1450)
    {name = "Dargon", ID = 12019, friendlyAlliance = true, friendlyHorde = true, location = 1450},
    {name = "My'lanna", ID = 12026, friendlyAlliance = true, friendlyHorde = true, location = 1450},
    -- Redridge Mountains (1433)
    {name = "Bartender Wental", ID = 5620, friendlyAlliance = false, friendlyHorde = true, location = 1433},
    -- Darkshore (1439)
    {name = "Tiyani", ID = 4195, friendlyAlliance = true, friendlyHorde = false, location = 1439},
    -- Loch Modan (1432)
    {name = "Innkeeper Hearthstove", ID = 6734, friendlyAlliance = true, friendlyHorde = false, location = 1432},
    -- Elwynn Forest (1429)
    {name = "Innkeeper Farley", ID = 295, friendlyAlliance = true, friendlyHorde = false, location = 1429},
    -- Tirisfal Glades (1420)
    {name = "Innkeeper Renee", ID = 5688, friendlyAlliance = false, friendlyHorde = true, location = 1420},
    -- Dun Morogh (1426)
    {name = "Kazan Mogosh", ID = 1237, friendlyAlliance = true, friendlyHorde = false, location = 1426},
    -- Mulgore (1412)
    {name = "Innkeeper Kauth", ID = 6746, friendlyAlliance = false, friendlyHorde = true, location = 1412},
    -- Teldrassil (1438)
    {name = "Dellylah", ID = 6091, friendlyAlliance = true, friendlyHorde = false, location = 1438},
    -- Durotar (1411)
    {name = "Innkeeper Grosk", ID = 6928, friendlyAlliance = false, friendlyHorde = true, location = 1411},
}
function SetVendor()
    local zone = GetZoneID()
    Log(zone)
    Log(Player:IsAlliance())
    local faction -- Declare once here
    if Player:IsAlliance() == true then
        faction = "Alliance"
        Log("For the Alliance!")
    else
        faction = "Horde"
        Log("For the Horde!")
    end
    Log("Faction:" .. faction)
    local playerPos = UnitPosToFloatArray(GetPlayer())
    local bestVendor = nil

    -- Try to find a vendor in the same zone and for the player's faction
    for _, vendor in ipairs(Vendors) do
        if vendor.location == zone then
            if (faction == "Alliance" and vendor.friendlyAlliance) or (faction == "Horde" and vendor.friendlyHorde) then
                Vendor = vendor
                print("Selected Vendor: " .. Vendor.name)
                return
            end
        end
    end

    -- If not found, find the closest vendor for the player's faction
    local minDist = math.huge
    for _, vendor in ipairs(Vendors) do
        if (faction == "Alliance" and vendor.friendlyAlliance) or (faction == "Horde" and vendor.friendlyHorde) then
            local vendorPos = GetNPCPostionFromDB(vendor.ID)
            if vendorPos and playerPos then
                local dist = DistanceBetweenPoints(playerPos, vendorPos)
                if dist < minDist then
                    minDist = dist
                    bestVendor = vendor
                end
            end
        end
    end

    if bestVendor then
        Vendor = bestVendor
        print("Selected closest Vendor: " .. Vendor.name)
    else
        print("No suitable vendor found for your faction.")
        Vendor = nil
    end
    Log("This isn't working!")
end
function SetFoodAndDrink()
    if Player.Class == "Warrior" or Player.Class == "Rogue" then
        Drink = nil
    else
        local bestDrink = Drink[1]
        for i = 1, #Drink do
            if Drink[i].level <= Player.Level and Drink[i].level > bestDrink.level then
                bestDrink = Drink[i]
            end
        end
        SelectedDrink = bestDrink
    end
    for i = 1, #Food do
        if Food[i].level <= Player.Level then
            SelectedFood = Food[i]
        end
    end
    if Drink == nil then
        print("No suitable drink found for your class.")
    else
        print("Selected Drink: " .. SelectedDrink.name)
        SetDrink(SelectedDrink.name, 40)
    end
    if SelectedFood then
        print("Selected Food: " .. SelectedFood.name)
        SetFood(SelectedFood.name, 40)
    else
        print("No suitable food found for your level.")
    end
end
function Override()
    if Drink ~= nil and SelectedDrink ~= nil then
        if ItemCount(SelectedDrink.name) < 5 then
            return false
        end
    end
    if SelectedFood ~= nil then
        if ItemCount(SelectedFood.name) < 5 then
            return false
        end
    end
    return true
end
function SellAtVendor()
    if not Vendor then
        print("Error: No vendor selected.")
        return
    end
    local pos = GetNPCPostionFromDB(Vendor.ID)
    if pos then
        QuestGoToPoint(pos[0], pos[1], pos[2], false, true)
        local unit = FindUnitByName(Vendor.name)
        if unit then
            FindMeshPathToUnit(unit)
            InteractWithUnit(unit)
            SleepPlugin(3000)
        else
            print("Error: Vendor " .. Vendor.name .. " not found.")
        end
    else
        print("Error: Could not get position for vendor " .. Vendor.name)
    end
end

SetFoodAndDrink()
--Grind and Gather goes here--
SetVendor()
SellAtVendor()

local Waypoints = {
    {2310.164,-5215.16162,83.9593048},
    {2351.5918,-5198.46729,76.16349},
    {2387.8645,-5172.51,74.20364},
    {2420.425,-5141.94238,84.1452255},
    {2447.27881,-5106.653,77.7071457},
    {2474.61646,-5083.149,81.4661255},
    {2500.39771,-5118.55664,79.26931},
    {2534.88379,-5147.1416,74.28947},
    {2569.38428,-5175.73828,73.79361},
    {2602.27319,-5205.97363,84.931},
    {2629.692,-5241.333,107.866737},
    {2658.50342,-5275.104,142.009781},
    {2682.76953,-5312.61572,154.654984},
    {2693.03125,-5356.099,158.698746},
    {2732.63,-5372.358,157.6695},
    {2777.30737,-5373.577,157.801544},
    {2816.28174,-5387.87061,163.7273},
    {2813.77881,-5430.69141,158.911652},
    {2779.104,-5455.564,160.164978},
    {2735.09229,-5463.00928,156.956238},
    {2692.23486,-5469.35645,156.945282},
    {2650.414,-5455.787,157.038147},
    {2649.8584,-5415.278,158.3527},
    {2682.139,-5384.36133,157.05571},
    {2685.08057,-5340.806,157.003418},
    {2674.276,-5298.05225,152.142044},
    {2649.18579,-5261.074,127.740074},
    {2621.421,-5225.947,98.64162},
    {2591.112,-5192.9585,79.591774},
    {2559.4187,-5161.497,74.6011658},
    {2523.09668,-5135.27246,73.75051},
    {2484.55151,-5114.759,79.9642639},
    {2445.773,-5095.71,80.31142},
    {2413.30933,-5067.915,80.23002},
    {2405.75244,-5025.03369,77.88099},
    {2408.13013,-4980.4834,75.23006},
    {2406.78027,-4935.598,76.4226761},
    {2389.59985,-4894.57227,79.92601},
    {2402.49048,-4853.52441,69.85717},
    {2411.11841,-4810.232,60.5720062},
    {2442.109,-4785.67529,73.59417},
    {2472.78271,-4753.59961,83.24254},
    {2510.09351,-4740.336,94.40197},
    {2547.40137,-4718.529,87.9692154},
    {2584.53467,-4694.75244,80.39603},
    {2619.78442,-4671.395,82.32204},
    {2663.72632,-4671.223,80.46008},
    {2705.652,-4679.321,78.11455},
    {2727.60083,-4717.6,76.62634},
    {2734.87378,-4761.59,75.89207},
    {2733.333,-4806.07031,79.34088},
    {2729.438,-4850.626,86.62202},
    {2738.31665,-4894.415,88.46847},
    {2753.054,-4936.72168,91.63862},
    {2782.86743,-4969.253,95.75036},
    {2820.06616,-4994.10449,100.370888},
    {2851.13916,-5026.377,104.40612},
    {2889.39478,-5047.506,105.785591},
    {2933.223,-5042.78857,105.129524},
    {2971.4043,-5022.04,104.104393},
    {2997.92334,-4986.67725,107.479988},
    {3017.32837,-4947.157,102.403557},
    {3033.60742,-4906.183,101.292496},
    {3029.34277,-4861.65625,101.063011},
    {3024.75562,-4817.13232,98.19305},
    {3017.67749,-4773.016,96.87087},
    {3013.609,-4728.8877,94.37375},
    {3013.45728,-4685.53369,93.0184555},
    {2991.71924,-4646.602,93.57423},
    {2992.559,-4607.71533,93.47364},
    {2986.46045,-4565.564,91.58664},
    {2980.701,-4522.16162,75.73347},
    {2979.51221,-4477.377,78.09159},
    {2978.99854,-4432.657,96.3847656},
    {2989.92773,-4389.21436,94.62977},
    {3007.86084,-4349.32568,95.11183},
    {3007.446,-4304.527,95.81142},
    {3013.29419,-4260.252,98.10153},
    {3006.40576,-4216.07764,94.97885},
    {2998.34375,-4172.054,95.14567},
    {2991.83252,-4127.73,95.50507},
    {2986.03735,-4085.14575,99.35103},
    {2955.68286,-4052.20313,101.786331},
    {2922.70972,-4021.913,103.999977},
    {2905.45581,-3982.05615,102.892426},
    {2881.18628,-3947.185,104.897964},
    {2871.55518,-3904.79565,107.55204},
    {2839.32,-3874.1084,105.960739},
    {2804.06787,-3846.4834,104.558289},
    {2766.07861,-3842.82446,103.367638},
    {2746.04858,-3882.28516,96.3154755},
    {2737.2085,-3925.87354,95.62487},
    {2720.44556,-3967.40747,94.17303},
    {2724.004,-4009.7146,92.4173},
    {2712.73462,-4052.29517,93.67335},
    {2678.289,-4077.62158,88.79638},
    {2655.68335,-4116.241,84.31922},
    {2628.68286,-4151.39355,79.71889},
    {2606.11279,-4189.173,78.03623},
    {2590.098,-4230.84375,70.290596},
    {2551.08179,-4239.744,73.51572},
    {2506.734,-4234.63,76.95928},
    {2464.53369,-4220.32861,76.8781357},
    {2431.27026,-4191.2666,74.31986},
    {2396.85986,-4163.36963,75.27379},
    {2367.068,-4130.07129,75.11558},
    {2330.5918,-4105.588,78.0119553},
    {2290.88,-4087.64429,77.27513},
    {2247.49243,-4096.20361,80.05372},
    {2207.10352,-4114.743,75.61632},
    {2177.21558,-4147.948,74.35519},
    {2144.796,-4177.597,73.95688},
    {2144.51343,-4221.668,74.30439},
    {2159.48975,-4263.51025,77.69781},
    {2177.37256,-4303.738,73.35693},
    {2162.34814,-4344.417,75.54218},
    {2166.69751,-4384.93555,75.87815},
    {2166.22241,-4424.81543,75.37576},
    {2123.69873,-4435.78955,77.34712},
    {2097.436,-4451.48633,74.9672546},
    {2099.98682,-4481.741,74.06378},
    {2061.34424,-4500.56934,74.8199539},
    {2021.10974,-4485.809,73.6237},
    {1994.71765,-4449.74463,73.6237},
    {1974.35388,-4409.84033,73.6227341},
    {1953.88757,-4369.983,73.64925},
    {1933.36731,-4330.159,74.97029},
    {1917.99731,-4288.14258,79.88535},
    {1904.191,-4245.7417,83.14575},
    {1890.26807,-4202.98242,90.29223},
    {1878.00574,-4160.12256,100.168816},
    {1858.10217,-4120.019,100.7251},
    {1849.1355,-4076.42651,103.34053},
    {1851.80286,-4034.97583,113.077766},
    {1872.58508,-4000.26758,116.971954},
    {1865.45447,-3956.51343,122.116356},
    {1863.36414,-3912.08887,129.676987},
    {1861.98828,-3867.3418,132.757965},
    {1878.01221,-3831.23169,135.942108},
    {1917.29932,-3812.52222,132.075592},
    {1940.55969,-3774.58447,125.014969},
    {1966.51648,-3738.23413,126.633942},
    {1991.23022,-3701.27734,126.266739},
    {2011.86487,-3663.32373,125.399681},
    {2015.68518,-3618.70044,124.004311},
    {2011.54138,-3574.74536,121.404556},
    {2042.62024,-3543.501,118.991867},
    {2081.193,-3520.89941,120.0592},
    {2116.46851,-3494.48975,117.467232},
    {2161.14087,-3495.24951,122.415451},
    {2205.05176,-3502.05225,127.232651},
    {2244.702,-3522.255,137.838913},
    {2274.6814,-3555.45825,152.39592},
    {2303.61572,-3589.60156,160.812042},
    {2336.137,-3620.307,174.646637},
    {2375.68237,-3640.55762,178.557449},
    {2419.295,-3638.78345,180.061523},
    {2456.57568,-3657.2085,177.7061},
    {2479.13159,-3695.92383,178.92984},
    {2504.63452,-3732.63159,178.389709},
    {2516.1272,-3775.13477,177.729446},
    {2479.596,-3797.66138,178.570435},
    {2447.2146,-3771.78418,178.210739},
    {2419.661,-3736.48584,178.804749},
    {2391.35864,-3701.93555,179.2089},
    {2377.168,-3659.54053,179.102356},
    {2347.206,-3627.55737,176.184814},
    {2315.64966,-3595.876,164.3271},
    {2285.33838,-3562.887,154.326126},
    {2255.01978,-3529.88965,142.793442},
    {2220.47778,-3502.07764,129.832764},
    {2179.919,-3483.9104,123.404762},
    {2139.07764,-3467.78174,115.936638},
    {2095.87158,-3456.351,114.21183},
    {2088.24829,-3415.551,115.705711},
    {2091.17651,-3370.8562,121.87114},
    {2095.133,-3327.22485,117.862534},
    {2078.89966,-3285.56714,102.565605},
    {2061.91357,-3244.873,86.34917},
    {2059.61279,-3201.67627,81.11073},
    {2022.76733,-3218.4292,85.08147},
    {2000.01245,-3255.83,95.7902},
    {1975.08557,-3292.31763,102.228752},
    {1942.2196,-3322.755,106.822227},
    {1909.357,-3353.18872,112.159523},
    {1876.49487,-3383.62256,112.04837},
    {1844.06433,-3414.0957,114.8708},
    {1815.84717,-3448.59473,120.193756},
    {1774.22192,-3464.372,128.909424},
    {1734.25244,-3483.57959,128.885742},
    {1718.25732,-3523.44043,126.582695},
    {1687.872,-3555.63135,126.033005},
    {1667.75244,-3595.33179,119.654434},
    {1649.8324,-3636.40381,113.040466},
    {1624.44373,-3672.29272,108.99157},
    {1603.403,-3709.33765,108.39621},
    {1594.895,-3752.19385,115.131081},
    {1579.16748,-3766.52686,113.37851},
    {1565.39343,-3801.29785,115.908562},
    {1598.31409,-3830.90259,124.272255},
    {1628.60632,-3863.848,129.204758},
    {1659.69714,-3895.45068,133.931015},
    {1658.45325,-3938.76733,134.6759},
    {1675.50061,-3980.198,133.641708},
    {1707.18091,-4004.16626,128.303085},
    {1732.51086,-4033.602,118.179436},
    {1739.85583,-4077.74585,104.154945},
    {1747.86658,-4121.80127,95.2373047},
    {1765.72266,-4162.40967,88.77963},
    {1789.16577,-4200.58643,88.1509857},
    {1812.609,-4238.763,91.502655},
    {1797.78479,-4273.47559,86.1006},
    {1773.84644,-4308.189,81.4499741},
    {1758.05347,-4350.101,78.28542},
    {1738.58374,-4388.647,74.40753},
    {1698.1698,-4407.97559,82.45113},
    {1657.66858,-4427.47168,90.29619},
    {1647.43445,-4469.701,82.25818},
    {1629.334,-4507.98975,79.83794},
    {1614.67188,-4550.13,79.54528},
    {1602.19971,-4593.148,79.76695},
    {1596.633,-4637.118,79.3896255},
    {1591.44727,-4679.96631,80.5127},
    {1608.7113,-4720.01563,81.74984},
    {1600.90759,-4758.30664,91.23726},
    {1639.80176,-4767.299,86.65341},
    {1678.00037,-4790.444,83.22617},
    {1713.23755,-4816.346,88.24497},
    {1723.6637,-4859.11426,92.5483246},
    {1706.8739,-4899.822,87.38922},
    {1698.00073,-4943.343,79.9868},
    {1689.5437,-4987.03467,78.833725},
    {1678.839,-5030.4043,82.27392},
    {1675.59082,-5074.93262,78.700386},
    {1655.99451,-5114.948,75.63871},
    {1678.35449,-5145.30664,75.3023453},
    {1718.59485,-5132.898,73.89449},
    {1761.9032,-5136.953,74.3607254},
    {1801.0459,-5116.7583,76.01248},
    {1835.99731,-5089.413,78.8697739},
    {1864.29944,-5055.268,82.9535751},
    {1885.02319,-5019.115,86.71051},
    {1900.89673,-4978.05,78.39191},
    {1921.57056,-4938.37256,78.106926},
    {1938.61963,-4898.20264,87.64227},
    {1941.11414,-4854.15039,99.08438},
    {1976.92517,-4830.677,94.3356857},
    {2014.96667,-4807.85352,80.7619553},
    {2049.99414,-4780.063,81.27337},
    {2091.554,-4765.149,74.84707},
    {2121.11548,-4797.08447,73.87352},
    {2121.63184,-4840.07373,76.14412},
    {2104.0498,-4881.2793,75.46456},
    {2081.9043,-4920.08643,78.1566238},
    {2053.088,-4953.833,76.32352},
    {2079.3584,-4985.85254,57.3994331},
    {2109.667,-5018.7793,51.31306},
    {2139.32324,-5052.32568,50.3375969},
    {2173.248,-5081.388,49.8911476},
    {2208.09985,-5100.59766,50.9453},
    {2250.07642,-5086.767,54.0615158},
    {2294.7124,-5084.267,64.35916},
    {2336.96,-5098.32129,74.35432}
}

local TargetNames = {
    "Small Thorium Vein", "Golden Vein", "Mithril Deposit", "Truesilver Deposit", "Rich Thorium Vein", "Sungrass", "Golden Sansam", "Black lotus", "Dreamfoil", "Mountain Silversage", "Arthas' Tears"
}

SetFoodAndDrink()
GrindAndGatherPath(TableToStringList(TargetNames), TableToVecList(Waypoints), 40, false, "Override")
SetVendor()
SellAtVendor()
