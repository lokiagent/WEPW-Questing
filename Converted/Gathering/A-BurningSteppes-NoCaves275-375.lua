---Generated by lokiagent's json converter---
Player = GetPlayer()
UseDBToRepair(false)
SetQuestRepairAt(30)
UseDBToSell(false)
SetQuestSellAt(2)
BlackListPoint(-7651.346, -682.618042, 182.073837)
BlackListPoint(-7665.64, -733.6909, 182.07486)
BlackListPoint(-7918.28027, -882.5255, 130.807953)
BlackListPoint(-8048.848, -940.433, 137.034)
BlackListPoint(-8062.968, -985.182434, 133.067245)
BlackListPoint(-8260.72949, -1193.56775, 143.555862)
BlackListPoint(-8186.761, -1466.59131, 144.4224)
BlackListPoint(-8206.54, -1747.54871, 145.843765)
BlackListPoint(-8215.10449, -2441.31836, 139.69371)
BlackListPoint(-8105.406, -2818.66821, 135.394028)
BlackListPoint(-7812.77832, -2894.70483, 133.525986)
BlackListPoint(-7817.52539, -2931.237, 131.210922)
BlackListPoint(-7665.94, -2790.14771, 132.74881)
BlackListPoint(-7718.774, -1373.17627, 131.665955)
BlackListPoint(-7730.10254, -1373.27722, 132.964935)
BlackListPoint(-7716.619, -1372.98669, 131.567047)
BlackListPoint(-7704.473, -1368.24768, 131.468155)
BlackListPoint(-7696.091, -1361.13892, 131.242981)
BlackListPoint(-7685.11, -1357.20288, 132.782578)
BlackListPoint(-7672.6, -1356.04016, 132.839066)
BlackListPoint(-7658.355, -1354.78784, 133.262863)
BlackListPoint(-7643.66455, -1354.36536, 133.006973)
BlackListPoint(-7628.22852, -1351.3269, 130.496964)
BlackListPoint(-7909.514, -1330.25415, 131.346039)
BlackListPoint(-7919.82568, -1328.95752, 130.704285)
BlackListPoint(-7931.195, -1326.23022, 131.524475)
BlackListPoint(-7938.9873, -1319.87964, 131.864975)
BlackListPoint(-7944.778, -1311.24561, 131.415192)
BlackListPoint(-7950.68164, -1299.76392, 131.801041)
BlackListPoint(-7956.01563, -1287.06079, 130.657654)
BlackListPoint(-7960.18066, -1273.21277, 132.254623)
BlackListPoint(-7962.997, -1258.49548, 130.790054)
BlackListPoint(-7965.97266, -1247.96863, 133.17897)
BlackListPoint(-7966.80566, -1238.317, 135.945633)
BlackListPoint(-7966.532, -1228.76538, 139.623779)
BlackListPoint(-7963.67236, -1218.95227, 144.244522)
BlackListPoint(-7957.975, -1205.3429, 150.524918)
BlackListPoint(-7952.284, -1194.20264, 155.308182)
BlackListPoint(-7946.658, -1181.49341, 161.292236)
BlackListPoint(-7979.38574, -1146.713, 165.532944)
BlackListPoint(-7987.40332, -1157.002, 160.661011)
BlackListPoint(-7994.047, -1166.28137, 156.518341)
BlackListPoint(-8000.0, -1178.9917, 152.677811)
BlackListPoint(-8004.97949, -1190.31824, 149.310028)
BlackListPoint(-8011.55957, -1195.81714, 147.4302)
BlackListPoint(-8018.01758, -1189.4353, 148.296021)
BlackListPoint(-8017.155, -1181.06067, 150.197083)
BlackListPoint(-8013.46, -1171.09753, 152.67691)
BlackListPoint(-8010.332, -1160.88342, 155.164871)
BlackListPoint(-8003.62939, -1149.8894, 158.784714)
BlackListPoint(-7995.07666, -1139.15735, 162.687317)
BlackListPoint(-7986.816, -1129.77649, 166.302063)
BlackListPoint(-7899.23535, -979.9981, 131.203064)
BlackListPoint(-7915.96143, -978.308, 131.508392)
BlackListPoint(-7925.9165, -963.070435, 129.8483)
BlackListPoint(-7925.00244, -944.8944, 130.887024)
BlackListPoint(-7911.047, -937.1706, 132.063354)
BlackListPoint(-7896.07861, -924.9451, 131.691345)
BlackListPoint(-7880.263, -909.405, 132.685333)
BlackListPoint(-7858.417, -904.168945, 127.561737)
BlackListPoint(-7643.16162, -677.872742, 182.913635)
BlackListPoint(-7655.49365, -686.6447, 182.380981)
BlackListPoint(-7616.76563, -702.404236, 180.3828)
BlackListPoint(-7619.37744, -701.769836, 181.184479)
BlackListPoint(-7659.438, -701.1559, 182.709076)
BlackListPoint(-7663.911, -705.8183, 184.644669)
BlackListPoint(-7664.2793, -703.655, 184.59671)
BlackListPoint(-8159.79736, -1055.649, 134.4826)
BlackListPoint(-8162.607, -1044.719, 134.2487)
BlackListPoint(-8166.84961, -1031.334, 135.362946)
BlackListPoint(-8066.68555, -2178.61035, 142.863876)
BlackListPoint(-7927.9375, -1111.3114, 172.519089)
BlackListPoint(-7927.57, -1116.82129, 171.535446)
BlackListPoint(-7940.609, -1143.7262, 172.966019)
BlackListPoint(-8111.12549, -2225.2168, 176.720078)
BlackListPoint(-8132.961, -2222.84863, 157.671951)
BlackListPoint(-8247.564, -2084.24414, 159.145615)
BlackListPoint(-7622.549, -3033.384, 162.613174)


Food = {
    {level = 1, name = "Tough Hunk of Bread"},
    {level = 5, name = "Freshly Baked Bread"},
    {level = 15, name = "Moist Cornbread"},
    {level = 25, name = "Mulgore Spice Bread"},
    {level = 35, name = "Soft Banana Bread"},
    {level = 45, name = "Homemade Cherry Pie"}
}
Drink = {
    {level = 1, name = "Refreshing Spring Water"},
    {level = 5, name = "Ice Cold Milk"},
    {level = 15, name = "Melon Juice"},
    {level = 25, name = "Sweet Nectar"},
    {level = 35, name = "Moonberry Juice"},
    {level = 45, name = "Morning Glory Dew"}
}
Vendors = {
    -- Stranglethorn Vale (1434)
    {name = "Uthok", ID = 1149, friendlyAlliance = false, friendlyHorde = true, location = 1434},
    {name = "Nixxrax Fillamug", ID = 2832, friendlyAlliance = true, friendlyHorde = true, location = 1434},
    -- Ashenvale (1440)
    {name = "Maliynn", ID = 3961, friendlyAlliance = true, friendlyHorde = false, location = 1440},
    {name = "Innkeeper Sikewa", ID = 12196, friendlyAlliance = false, friendlyHorde = true, location = 1440},
    -- The Hinterlands (1425)
    {name = "Innkeeper Adegwa", ID = 8118, friendlyAlliance = false, friendlyHorde = true, location = 1425},
    -- Azshara (1447)
    {name = "Kurll", ID = 3621, friendlyAlliance = true, friendlyHorde = false, location = 1447},
    -- Feralas (1444)
    {name = "Mardrack Greenwell", ID = 7941, friendlyAlliance = false, friendlyHorde = true, location = 1444},
    {name = "Loorana", ID = 8143, friendlyAlliance = true, friendlyHorde = false, location = 1444},
    -- Desolace (1443)
    {name = "Janet Hommers", ID = 8150, friendlyAlliance = true, friendlyHorde = true, location = 1443},
    -- The Barrens (1413)
    {name = "Innkeeper Boorand Plainswind", ID = 3934, friendlyAlliance = false, friendlyHorde = true, location = 1413},
    -- Hillsbrad Foothills (1424)
    {name = "Innkeeper Shay", ID = 2388, friendlyAlliance = false, friendlyHorde = true, location = 1424},
    -- Silithus (1451)
    {name = "Calandrath", ID = 15174, friendlyAlliance = true, friendlyHorde = true, location = 1451},
    -- Badlands (1418)
    {name = "Innkeeper Shul'kar", ID = 9356, friendlyAlliance = false, friendlyHorde = true, location = 1418},
    -- Dustwallow Marsh (1445)
    {name = "Innkeeper Janene", ID = 6272, friendlyAlliance = true, friendlyHorde = false, location = 1445},
    {name = "Innkeeper Shay", ID = 2388, friendlyAlliance = false, friendlyHorde = true, location = 1445},
    -- Swamp of Sorrows (1435)
    {name = "Thultash", ID = 982, friendlyAlliance = true, friendlyHorde = false, location = 1435},
    -- Felwood (1448)
    {name = "Innkeeper Shyria", ID = 11116, friendlyAlliance = true, friendlyHorde = false, location = 1448},
    -- Winterspring (1452)
    {name = "Himmik", ID = 11187, friendlyAlliance = true, friendlyHorde = true, location = 1452},
    -- Duskwood (1431)
    {name = "Innkeeper Trelayne", ID = 6791, friendlyAlliance = true, friendlyHorde = false, location = 1431},
    -- Thousand Needles (1441)
    {name = "Laer Stepperunner", ID = 3689, friendlyAlliance = false, friendlyHorde = true, location = 1441},
    -- Eastern Plaguelands (1423)
    {name = "Innkeeper Bates", ID = 16256, friendlyAlliance = true, friendlyHorde = false, location = 1423},
    -- Arathi Highlands (1417)
    {name = "Innkeeper Kimlya", ID = 9501, friendlyAlliance = true, friendlyHorde = false, location = 1417},
    -- Wetlands (1437)
    {name = "Innkeeper Helbrek", ID = 14624, friendlyAlliance = true, friendlyHorde = false, location = 1437},
    -- Western Plaguelands (1422)
    {name = "Innkeeper Lyshaerya", ID = 12959, friendlyAlliance = true, friendlyHorde = false, location = 1422},
    -- Un'Goro Crater (1449)
    {name = "Innkeeper Karakul", ID = 11118, friendlyAlliance = true, friendlyHorde = true, location = 1449},
    -- Stonetalon Mountains (1442)
    {name = "Innkeeper Jayka", ID = 7731, friendlyAlliance = false, friendlyHorde = true, location = 1442},
    -- Searing Gorge (1427)
    {name = "Innkeeper Grilka", ID = 12944, friendlyAlliance = false, friendlyHorde = true, location = 1427},
    -- Tanaris (1446)
    {name = "Innkeeper Fizzgrimble", ID = 7733, friendlyAlliance = true, friendlyHorde = false, location = 1446},
    {name = "Innkeeper Shul'kar", ID = 9356, friendlyAlliance = false, friendlyHorde = true, location = 1446},
    -- Blasted Lands (1419)
    {name = "Bernie Heisten", ID = 3546, friendlyAlliance = true, friendlyHorde = true, location = 1419},
    -- Burning Steppes (1428)
    {name = "Gabrielle Chase", ID = 3298, friendlyAlliance = true, friendlyHorde = false, location = 1428},
    -- Silverpine Forest (1421)
    {name = "Innkeeper Bates", ID = 16256, friendlyAlliance = false, friendlyHorde = true, location = 1421},
    -- Westfall (1436)
    {name = "Innkeeper Heather", ID = 8931, friendlyAlliance = true, friendlyHorde = false, location = 1436},
    -- Moonglade (1450)
    {name = "Dargon", ID = 12019, friendlyAlliance = true, friendlyHorde = true, location = 1450},
    {name = "My'lanna", ID = 12026, friendlyAlliance = true, friendlyHorde = true, location = 1450},
    -- Redridge Mountains (1433)
    {name = "Bartender Wental", ID = 5620, friendlyAlliance = false, friendlyHorde = true, location = 1433},
    -- Darkshore (1439)
    {name = "Tiyani", ID = 4195, friendlyAlliance = true, friendlyHorde = false, location = 1439},
    -- Loch Modan (1432)
    {name = "Innkeeper Hearthstove", ID = 6734, friendlyAlliance = true, friendlyHorde = false, location = 1432},
    -- Elwynn Forest (1429)
    {name = "Innkeeper Farley", ID = 295, friendlyAlliance = true, friendlyHorde = false, location = 1429},
    -- Tirisfal Glades (1420)
    {name = "Innkeeper Renee", ID = 5688, friendlyAlliance = false, friendlyHorde = true, location = 1420},
    -- Dun Morogh (1426)
    {name = "Kazan Mogosh", ID = 1237, friendlyAlliance = true, friendlyHorde = false, location = 1426},
    -- Mulgore (1412)
    {name = "Innkeeper Kauth", ID = 6746, friendlyAlliance = false, friendlyHorde = true, location = 1412},
    -- Teldrassil (1438)
    {name = "Dellylah", ID = 6091, friendlyAlliance = true, friendlyHorde = false, location = 1438},
    -- Durotar (1411)
    {name = "Innkeeper Grosk", ID = 6928, friendlyAlliance = false, friendlyHorde = true, location = 1411},
}
function SetVendor()
    local zone = GetZoneID()
    Log(zone)
    Log(Player:IsAlliance())
    local faction -- Declare once here
    if Player:IsAlliance() == true then
        faction = "Alliance"
        Log("For the Alliance!")
    else
        faction = "Horde"
        Log("For the Horde!")
    end
    Log("Faction:" .. faction)
    local playerPos = UnitPosToFloatArray(GetPlayer())
    local bestVendor = nil

    -- Try to find a vendor in the same zone and for the player's faction
    for _, vendor in ipairs(Vendors) do
        if vendor.location == zone then
            if (faction == "Alliance" and vendor.friendlyAlliance) or (faction == "Horde" and vendor.friendlyHorde) then
                Vendor = vendor
                print("Selected Vendor: " .. Vendor.name)
                return
            end
        end
    end

    -- If not found, find the closest vendor for the player's faction
    local minDist = math.huge
    for _, vendor in ipairs(Vendors) do
        if (faction == "Alliance" and vendor.friendlyAlliance) or (faction == "Horde" and vendor.friendlyHorde) then
            local vendorPos = GetNPCPostionFromDB(vendor.ID)
            if vendorPos and playerPos then
                local dist = DistanceBetweenPoints(playerPos, vendorPos)
                if dist < minDist then
                    minDist = dist
                    bestVendor = vendor
                end
            end
        end
    end

    if bestVendor then
        Vendor = bestVendor
        print("Selected closest Vendor: " .. Vendor.name)
    else
        print("No suitable vendor found for your faction.")
        Vendor = nil
    end
    Log("This isn't working!")
end
function SetFoodAndDrink()
    if Player.Class == "Warrior" or Player.Class == "Rogue" then
        Drink = nil
    else
        local bestDrink = Drink[1]
        for i = 1, #Drink do
            if Drink[i].level <= Player.Level and Drink[i].level > bestDrink.level then
                bestDrink = Drink[i]
            end
        end
        SelectedDrink = bestDrink
    end
    for i = 1, #Food do
        if Food[i].level <= Player.Level then
            SelectedFood = Food[i]
        end
    end
    if Drink == nil then
        print("No suitable drink found for your class.")
    else
        print("Selected Drink: " .. SelectedDrink.name)
        SetDrink(SelectedDrink.name, 40)
    end
    if SelectedFood then
        print("Selected Food: " .. SelectedFood.name)
        SetFood(SelectedFood.name, 40)
    else
        print("No suitable food found for your level.")
    end
end
function Override()
    if Drink ~= nil and SelectedDrink ~= nil then
        if ItemCount(SelectedDrink.name) < 5 then
            return false
        end
    end
    if SelectedFood ~= nil then
        if ItemCount(SelectedFood.name) < 5 then
            return false
        end
    end
    return true
end
function SellAtVendor()
    if not Vendor then
        print("Error: No vendor selected.")
        return
    end
    local pos = GetNPCPostionFromDB(Vendor.ID)
    if pos then
        QuestGoToPoint(pos[0], pos[1], pos[2], false, true)
        local unit = FindUnitByName(Vendor.name)
        if unit then
            FindMeshPathToUnit(unit)
            InteractWithUnit(unit)
            SleepPlugin(3000)
        else
            print("Error: Vendor " .. Vendor.name .. " not found.")
        end
    else
        print("Error: Could not get position for vendor " .. Vendor.name)
    end
end

SetFoodAndDrink()
--Grind and Gather goes here--
SetVendor()
SellAtVendor()

local Waypoints = {
    {-7687.83,-695.040161,182.1936},
    {-7934.41357,-865.6653,128.996292},
    {-7922.062,-1001.82581,133.261887},
    {-8166.17041,-1003.69421,135.230667},
    {-8402.805,-1202.86475,187.292618},
    {-8220.384,-1505.38684,142.557083},
    {-8117.01025,-1768.28662,133.0219},
    {-8213.645,-1931.07764,142.557144},
    {-8189.22852,-2111.863,143.364609},
    {-8228.483,-2546.443,135.142334},
    {-8058.18066,-2939.39136,135.260391},
    {-7760.359,-2960.23462,133.090561},
    {-7618.216,-2943.188,131.1227},
    {-7558.86475,-2568.00684,136.444092},
    {-7598.29053,-2383.17773,138.18158},
    {-7725.504,-2245.68,137.796448},
    {-7746.4917,-1997.74524,133.455444},
    {-7765.412,-1558.78064,132.4043},
    {-7775.33057,-1765.41931,133.4762},
    {-7800.783,-1907.80664,134.198883},
    {-7945.25244,-1863.48132,132.508148},
    {-8007.05469,-1342.974,134.215118},
    {-8117.477,-749.796631,134.520889},
    {-7946.02148,-858.180847,127.766571},
    {-7690.81152,-708.7457,182.353714}
}

local TargetNames = {
    "Mountain Silversage", "Rich Thorium Vein", "Small Thorium Vein", "Black Lotus", "Sungrass", "Dreamfoil", "Golden Sansam", "Mithril Deposit", "Truesilver Deposit", "Dark Iron Deposit", "Gold Vein", "Thorium Vein"
}

SetFoodAndDrink()
GrindAndGatherPath(TableToStringList(TargetNames), TableToVecList(Waypoints), 40, false, "Override")
SetVendor()
SellAtVendor()
